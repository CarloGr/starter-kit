/*!
TYPEPLATE
URL ........... http://typeplate.com
VERSION ....... 2.0.0
Github ........ https://github.com/typeplate/bower
AUTHORS ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)
LICENSE ....... Creative Commmons Attribution 3.0 (http://creativecommons.org/licenses/by/3.0)
LICENSE URL ... https://github.com/typeplate/bower/blob/master/license.txt
*/


// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Variables
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Base
// -------------------------------------//

$typl8-serif-boolean: true !default; // can be redeclared from another stylesheet post @import "typeplate.scss"
$typl8-custom-font-family: false !default; // ex.) $typl8-custom-font-family: "Custom-Font-Name", serif;
$typl8-font-family: if($typl8-serif-boolean, serif, sans-serif) !default; // non-font-face stack
$typl8-font-weight: normal !default;
$typl8-line-height: 1.65 !default;
$typl8-font-size: 112.5 !default; // % = (16 * 112.5% = 18px)
$typl8-font-base: 16 * ($typl8-font-size/100) !default; // converts % to px
$typl8-measure: $typl8-font-base * $typl8-line-height;


// $Paragraphs
// -------------------------------------//

$typl8-indent-val: 1.5em !default;

// @use:
// 'false' - no vertical whitespace between subsequent paragraphs.
// 'true' - vertical whitespace between subsequent paragraphs.
$typl8-paragraph-spacing: false !default;


// $Small-Print
// -------------------------------------//

$typl8-small-print-size: 65% !default;


// $Base-Color
// -------------------------------------//

$typl8-body-copy-color: #444 !default;
$typl8-heading-color: #222 !default;


// $Ampersand
// -------------------------------------//

$typl8-amp-fontface-name: Ampersand !default;
$typl8-amp-font-family: Verdana, sans-serif !default;
$typl8-amp-fontface-source: local('Georgia'), local('Garamond'), local('Palatino'), local('Book Antiqua') !default;
$typl8-amp-fontface-fallback: local('Georgia') !default;


// $Icon-Font-Helper
// -------------------------------------//

// @example:
// ex.1) $typl8-icon-fonts: (icon-name);
// ex.2) $typl8-icon-fonts: (icon-name1, icon-name2, icon-name3);
$typl8-icon-fonts: null !default;


// $Typescale
// -------------------------------------//

$typl8-tera: 117 !default; // 117 = 18 × 6.5
$typl8-giga: 90 !default; // 90 = 18 × 5
$typl8-mega: 72 !default; // 72 = 18 × 4
$typl8-alpha: 60 !default; // 60 = 18 × 3.3333
$typl8-beta: 48 !default; // 48 = 18 × 2.6667
$typl8-gamma: 36 !default; // 36 = 18 × 2
$typl8-delta: 24 !default; // 24 = 18 × 1.3333
$typl8-epsilon: 21 !default; // 21 = 18 × 1.1667
$typl8-zeta: 18 !default; // 18 = 18 × 1


// $Typescale-Unit
// -------------------------------------//

$typl8-type-scale-unit-value: rem !default;


// $Pull-Quotes
// -------------------------------------//

$typl8-pull-quote-fontsize: 4em !default;
$typl8-pull-quote-opacity: 0.5 !default;
$typl8-pull-quote-color: #dc976e !default;


// $Citation
// -------------------------------------//

$typl8-cite-display: block !default;
$typl8-cite-text-align: right !default;
$typl8-cite-font-size: inherit !default;


// $Small-Caps
// -------------------------------------//

$typl8-smcps-color: gray !default;
$typl8-smcps-weight: 600 !default;


// $DropCap
// -------------------------------------//

$typl8-dropcap-float-position: left !default;
$typl8-dropcap-font-size: 4em !default;
$typl8-dropcap-font-family: inherit !default;
$typl8-dropcap-txt-indent: 0 !default;
$typl8-dropcap-margin: inherit !default;
$typl8-dropcap-padding: inherit !default;
$typl8-dropcap-color: inherit !default;
$typl8-dropcap-line-height: 1 !default;
$typl8-dropcap-bg: transparent !default;


// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Fontfaces
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Unicode-Range-Ampersand
// -------------------------------------//

@font-face {
	font-family: '#{$typl8-amp-fontface-name}';
	src: $typl8-amp-fontface-source;
	unicode-range: U+0026;
}

// Ampersand fallback font for unicode range
@font-face {
	font-family: '#{$typl8-amp-fontface-name}';
	src: $typl8-amp-fontface-fallback;
	unicode-range: U+270C;
}


// $Icon-Font-Helper
// -------------------------------------//

// @use:
// 1. Install Compass.
// 2. Create a 'fonts' directory in the root of your project.
// 3. Specify within your 'config.rb' the following line…
//
// fonts_dir = "name-of-your-fonts-directory" ( i.e. fonts_dir = "fonts" )

// @example:
// ex.1) $typl8-icon-fonts: (<icon-name>);
// ex.2) $typl8-icon-fonts: (<icon-name1>[,<icon-name2>, <icon-name3>]);

@if ($typl8-icon-fonts != null) {
	@each $font in $typl8-icon-fonts {
		@include font-face( $font,
			font-files(
				'#{$font}/#{$font}.woff',
				'#{$font}/#{$font}.ttf',
				'#{$font}/#{$font}.svg', svg
			),
			'#{$font}/#{$font}.eot'
			)
	}
}


// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Functions
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Context Calculator
// -------------------------------------//
// @notes:
// divide a given font-size by base
// font-size & return a relative value

@function context-calc($scale, $base, $value) {
	@return ($scale/$base)#{$value};
}


// $Measure-Margin
// -------------------------------------//
// @notes:
// divide 1 unit of measure by given
// font-size & return a relative value

@function measure-margin($scale, $measure, $value) {
	$pixelValue: $measure/$scale;
	$remValue: $pixelValue * $typl8-font-base;

	@if $value == rem {
		@return $pixelValue#{$value};
	} @else if $value == em {
		@return ($remValue/$scale)#{$value};
	} @else {
		@return $remValue#{$value};
	}
}


// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Mixins
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Typescale
// -------------------------------------//

@mixin type-scale($scale, $base, $value, $measure:"") {
	@if $value == rem {
		font-size: $scale#{px};
		font-size: context-calc($scale, $base, $value);
	} @else if $value == em {
		font-size: context-calc($scale, $base, $value);
	} @else {
		font-size: $scale#{px};
	}

	@if $measure != "" {
		@if $value == rem {
			margin-bottom: measure-margin($scale, $measure, $value: px);
			margin-bottom: measure-margin($scale, $measure, $value);
		} @else if $value == em {
			margin-bottom: measure-margin($scale, $measure, $value: em);
		} @else {
			margin-bottom: measure-margin($scale, $measure, $value);
		}
	}
}


// $Hypens
// -------------------------------------//
// @notes:
// http://caniuse.com/#search=hyphens
// http://trentwalton.com/2011/09/07/css-hyphenation

// @use:
// accepted values: [ none | manual | auto ]

@mixin css-hyphens($val) {
	-webkit-hyphens: $val;
	-moz-hyphens: $val;
	-ms-hyphens: $val;
	-o-hyphens: $val;
	hyphens: $val;
}


// $Smcps
// -------------------------------------//
// @notes:
// http://caniuse.com/#search=font-variant
// http://blog.hypsometry.com/articles/true-small-capitals-with-font-face
// font-variant depends on the font family.
// some font-families don't support small caps
// or don't provide them with their web font.

@mixin smallcaps($color, $font-weight) {
	-webkit-font-variant: small-caps;
	-moz-font-variant: small-caps;
	font-variant: small-caps;
	font-weight: $font-weight;
	text-transform: lowercase;
	color: $color;
}

%font-feature-smcp {
	-ms-font-feature-settings: "smcp";
	-moz-font-feature-settings: "smcp";
	-webkit-font-feature-settings: "smcp";
	font-feature-settings: "smcp";
}

%text-figures {
	-ms-font-feature-settings: 'onum';
	-moz-font-feature-settings: 'onum';
	-webkit-font-feature-settings: 'onum';
	font-feature-settings: 'onum';
}


// $Fontsize-Adjust
// -------------------------------------//
// @notes:
// firefox 17+ only (as of Feb. 2013)
// correct x-height for fallback fonts. 
// requires secret formula yet to be discovered.

@mixin font-size-adjust($adjust-value) {
	font-size-adjust: $adjust-value;
}


// $Ampersand
// -------------------------------------//

@mixin ampersand($typl8-amp-font-family...) {
	font-family: $typl8-amp-font-family;
}


// $Blockquote
// -------------------------------------//
// @notes:
// "-" is your citation flourish.
// For example:
// I always say important things because I'm so smart
//                           - Super Important Person

// @example:
// .your-class-name { @include blockquote("-"); }

@mixin blockquote($citation-flourish) {
	p {
		&:last-of-type {
			margin-bottom: -#{$typl8-line-height/2}em;
		}
	}
	+ figcaption {
		@extend %cite;
		&:before {
			content: $citation-flourish;
		}
	}
}

@mixin cite-style($display, $text-align, $font-size) {
	display: $display;
	font-size: $font-size;
	text-align: $text-align;
}


// $Pull-Quotes
// -------------------------------------//

@mixin pull-quotes($fontsize, $opacity, $color) {
	position: relative;
	padding: context-calc($fontsize, $fontsize, em);
	&:before,
	&:after {
		height: context-calc($fontsize, $fontsize, em);
		opacity: $opacity;
		position: absolute;
		font-size: $fontsize;
		color: $color;
	}
	&:before {
		content: '“';
		top:  0;
		left: 0;
	}
	&:after {
		content: '”';
		bottom: 0;
		right: 0;
	}
}


// $Dropcaps
// -------------------------------------//

// @use:
// add the .dropcap class to your markup

// @example:
// <p class="drop-cap">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus, sit, placeat velit debitis perferendis officia optio molestias eos amet deleniti eaque praesentium iusto reprehenderit sed atque eum dolorum error quisquam.</p>

@mixin dropcap($float-position, $font-size, $font-family, $txt-indent, $margin, $padding, $color, $line-height, $bg) {
	&:first-letter {
		float: $float-position;
		margin: $margin;
		padding: $padding;
		font-size: $font-size;
		font-family: $font-family;
		line-height: $line-height;
		text-indent: $txt-indent;
		background: $bg;
		color: $color;
	}
}


// $Code
// -------------------------------------//

@mixin white-space($wrap-space) {
	@if $wrap-space == 'pre-wrap' {
		white-space: #{-moz-}$wrap-space;
		white-space: $wrap-space;
	} @else {
		white-space: $wrap-space;
	}
}


// $Definition-Lists
// -------------------------------------//
// @notes:
// <lining>
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css
// <dictionary-style>
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css

@mixin definition-list-style($style) {
	@if $style == lining {
		dt,
		dd {
			display: inline;
			margin: 0;
		}
		dt,
		dd {
			& + dt {
				&:before {
					content: "\A";
					white-space: pre;
				}
			}
		}
		dd {
			& + dd {
				&:before {
					content: ", ";
				}
			}
			&:before {
					content: ": ";
					margin-left: -0.2rem; //removes extra space between the dt and the colon
			}
		}
	}
	// dictionary-style
	@if $style == dictionary-style {
		dt {
			display: inline;
			counter-reset: definitions;
			& + dt {
				&:before {
					content: ", ";
					margin-left: -0.2rem; // removes extra space between the dt and the comma
				}
			}
		}
		dd {
			display: block;
			counter-increment: definitions;
			&:before {
				content: counter(definitions, decimal) ". ";
			}
		}
	}
}



// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Placeholders
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Ampersands
// -------------------------------------//

// @use:
// Call your ampersand on any element you wish from another stylesheet
// using this Sass extend we've provided. For exmaple:
//
// <h6 class="ampersand">Dewey Cheat 'em & Howe</h6>

// @example:
// .ampersand { @extend %ampersand-placeholder; }

%ampersand-placeholder {
	@include ampersand($typl8-amp-fontface-name, $typl8-amp-font-family);
}


%cite {
	@include cite-style($typl8-cite-display, $typl8-cite-text-align, $typl8-cite-font-size);
}




// $Wordwrap
// -------------------------------------//

// @use:
// <normal>: Indicates that lines may only break at normal word break points.
// <break-word> : Indicates that normally unbreakable words may be broken at arbitrary 
//              points if there are no otherwise acceptable break points in the line.

%breakword {
	word-wrap: break-word;
}

%normal-wrap {
	word-wrap: normal;
}

%inherit-wrap {
	word-wrap: auto;
}



// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Styles
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Globals
// -------------------------------------//

html {
	@if $typl8-custom-font-family {
		font: $typl8-font-weight #{$typl8-font-size + "%"}/#{$typl8-line-height} $typl8-custom-font-family, $typl8-font-family;
	} @else {
		font: $typl8-font-weight #{$typl8-font-size + "%"}/#{$typl8-line-height} $typl8-font-family;
	}
}

body {
	@include css-hyphens(auto);
	@extend %breakword;
	color: $typl8-body-copy-color;
}

small {
	font-size: $typl8-small-print-size;
}


// $Headings
// -------------------------------------//
// @use:
// Extend included classes on any element of your
// choosing.

// @example:
// <h6 class="giga">Awesome Headline</h6>
// <p class="tera">a story about a dude</p>

// @notes:
// Special Props to Harry Roberts for this trick.
%hN {
	text-rendering: optimizeLegibility; // voodoo to enable ligatures and kerning
	line-height: 1; // this fixes huge spaces when a heading wraps onto two lines
	margin-top: 0;
}

// @notes:
// Multi-dimensional array, where:
// the first value is the name of the class.
// The second value is the variable for size.
$sizes: tera $typl8-tera, giga $typl8-giga, mega $typl8-mega, alpha $typl8-alpha, beta $typl8-beta, gamma $typl8-gamma, delta $typl8-delta, epsilon $typl8-epsilon, zeta $typl8-zeta;

// @notes:
// Sass loop to associate h1-h6 tags with their appropriate greek
// heading based on a modular scale. for each size in the scale,
// create a class name.
@each $size in $sizes {
	.#{nth($size, 1)} {
		@include type-scale(nth($size, 2), $typl8-font-base, '#{$typl8-type-scale-unit-value}', $typl8-measure);
	}
}

h1 {
	@extend .alpha;
	@extend %hN;
}

h2 {
	@extend .beta;
	@extend %hN;
}

h3 {
	@extend .gamma;
	@extend %hN;
}

h4 {
	@extend .delta;
	@extend %hN;
}

h5 {
	@extend .epsilon;
	@extend %hN;
}

h6 {
	@extend .zeta;
	@extend %hN;
}


// $Parargraphs
// -------------------------------------//

p {
	margin: auto auto $typl8-indent-val;
	@if $typl8-paragraph-spacing == false {
		& + p {
			text-indent: $typl8-indent-val;
			margin-top: -$typl8-indent-val;
		}
	}
}


// $Hyphenation
// -------------------------------------//
// @notes:
// http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation

abbr,
acronym,
blockquote,
code,
kbd,
q,
samp,
var {
	@include css-hyphens(none);
}


// $Codeblocks
// -------------------------------------//

pre code {
	@extend %normal-wrap;
	@include white-space(pre-wrap);
}

pre {
	@include white-space(pre);
}

code {
	@include white-space(pre);
	font-family: monospace;
}


// $Smallcaps
// -------------------------------------//
/**
 * Abbreviations Markup
 *
	<abbr title="hyper text markup language">HMTL</abbr>
 *
 * Extend this object into your markup.
 *
 */
abbr {
	@include smallcaps($typl8-smcps-color, $typl8-smcps-weight);
	&[title]:hover {
		cursor: help;
	}
}


// $Headings-Color
// -------------------------------------//

h1,
h2,
h3,
h4,
h5,
h6 {
	color: $typl8-heading-color;
}


// $Dropcap
// -------------------------------------//

.drop-cap {
	@include dropcap($typl8-dropcap-float-position, $typl8-dropcap-font-size, $typl8-dropcap-font-family, $typl8-dropcap-txt-indent, $typl8-dropcap-margin, $typl8-dropcap-padding, $typl8-dropcap-color, $typl8-dropcap-line-height, $typl8-dropcap-bg);
}

// @notes
// combats our sibling paragraphs syling and indentation
p + .drop-cap {
	text-indent: 0;
	margin-top: 0;
}


// $Definition-Lists
// -------------------------------------//
/**
 * Lining Definition Style Markup
 *
	<dl class="lining">
		<dt><b></b></dt>
		<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.lining {
	@include definition-list-style(lining);
}

/**
 * Dictionary Definition Style Markup
 *
	<dl class="dictionary-style">
		<dt><b></b></dt>
		<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.dictionary-style {
	@include definition-list-style(dictionary-style);
}


// $Blockquote-Markup
// -------------------------------------//
/**
 * Blockquote Markup
 *
		<figure>
			<blockquote cite="">
				<p></p>
			</blockquote>
			<figcaption>
				<cite>
					<small><a href=""></a></small>
				</cite>
			</figcaption>
		</figure>
 *
 * Extend this object into your markup.
 *
 */


// $Pull-Quotes
// -------------------------------------//
// @notes
// http://24ways.org/2005/swooshy-curly-quotes-without-images

/**
 * Pull Quotes Markup
 *
	<aside class="pull-quote">
		<blockquote>
			<p></p>
		</blockquote>
	</aside>
 *
 * Extend this object into your custom stylesheet.
 *
 */

.pull-quote {
	 @include pull-quotes($typl8-pull-quote-fontsize, $typl8-pull-quote-opacity, $typl8-pull-quote-color);
}


// $Figures
// -------------------------------------//
/**
 * Figures Markup
 *
	<figure>
		<figcaption>
			<strong>Fig. 4.2 | </strong>Type Anatomy, an excerpt from Mark Boulton's book<cite title="http://designingfortheweb.co.uk/book/part3/part3_chapter11.php">"Designing for the Web"</cite>
		</figcaption>
	</figure>
 *
 * Extend this object into your markup.
 *
 */


// $Footnotes
// -------------------------------------//
/**
 * Footnote Markup : Replace 'X' with your unique number for each footnote
 *
	<article>
		<p><sup><a href="#fn-itemX" id="fn-returnX"></a></sup></p>
		<footer>
			<ol class="foot-notes">
				<li id="fn-itemX"><a href="#fn-returnX">↩</a></li>
			</ol>
		</footer>
	</article>
 *
 * Extend this object into your markup.
 *
 */
